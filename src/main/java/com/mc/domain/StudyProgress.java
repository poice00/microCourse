package com.mc.domain;
// Generated 2015-9-15 12:29:23 by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * StudyProgress generated by hbm2java
 */
@Entity
@Table(name = "study_progress", catalog = "micro_course")
public class StudyProgress implements java.io.Serializable {

	private StudyProgressId id;
	private User user;
	private Course course;
	private int learnedLength;
	private int learnchapterNum;
	private Date startTime;

	public StudyProgress() {
	}

	public StudyProgress(StudyProgressId id, User user, Course course, int learnedLength) {
		this.id = id;
		this.user = user;
		this.setCourse(course);
		this.learnedLength = learnedLength;
	}

	public StudyProgress(StudyProgressId id, User user, Course course, int learnedLength, Date startTime) {
		this.id = id;
		this.user = user;
		this.setCourse(course);
		this.learnedLength = learnedLength;
		this.startTime = startTime;
	}

	@EmbeddedId

	@AttributeOverrides({ @AttributeOverride(name = "userId", column = @Column(name = "user_id", nullable = false) ),
			@AttributeOverride(name = "courseId", column = @Column(name = "course_id", nullable = false) ) })
	public StudyProgressId getId() {
		return this.id;
	}

	public void setId(StudyProgressId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false, insertable = false, updatable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "course_id", nullable = false, insertable = false, updatable = false)
	public Course getCourse() {
		return course;
	}

	public void setCourse(Course course) {
		this.course = course;
	}
	

	@Column(name = "learned_length", nullable = false)
	public int getLearnedLength() {
		return this.learnedLength;
	}

	public void setLearnedLength(int learnedLength) {
		this.learnedLength = learnedLength;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "start_time", length = 10)
	public Date getStartTime() {
		return this.startTime;
	}

	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}

	public int getLearnchapterNum() {
		return learnchapterNum;
	}

	public void setLearnchapterNum(int learnchapterNum) {
		this.learnchapterNum = learnchapterNum;
	}
}
